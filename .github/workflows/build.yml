name: Build & Test
# This reusable workflow will test and build the application. All assets will be packaged and uploaded
# Creates the following artifacts:
#  - docker-artifacts (Docker RootFS)
#  - npm-artifacts (NPM Uplaod)
#  - doc-artifacts (Documentation for GH Wiki)
#  - changelog (File containing changelog description)

on:
  workflow_call:
  pull_request:

env:
  NODE_VERSION: 18

jobs:
  build:
    name: Build & Test Project
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Install
        run: |
          npm run clean && \
          npm install
        working-directory: rootfs/opt/icloud-photos-sync/
      - name: Test
        run: |
          npm run test-unit
        working-directory: rootfs/opt/icloud-photos-sync/
      - name: Build
        run: |
          npm run build && \
          npm run docs
        working-directory: rootfs/opt/icloud-photos-sync/
      - name: Package artifacts
        run: |
          # docker rootfs
          tar -C ./rootfs -czf ./rootfs.tar.gz ./

          # npm artifacts
          cp README.md CHANGELOG.md LICENSE rootfs/opt/icloud-photos-sync/ && \
          tar -C rootfs/opt/icloud-photos-sync/ -czf ./npm.tar.gz README.md CHANGELOG.md LICENSE package.json bin/

          # docs
          tar -C rootfs/opt/icloud-photos-sync/ -czf ./docs.tar.gz docs/
      - name: Upload npm artifacts
        uses: actions/upload-artifact@v3
        with:
          name: npm-artifacts
          path: ./npm.tar.gz
      - name: Upload docker artifacts
        uses: actions/upload-artifact@v3
        with:
          name: docker-artifacts
          path: |
            ./rootfs.tar.gz
            ./Dockerfile
      - name: Upload doc artifacts
        uses: actions/upload-artifact@v3
        with:
          name: doc-artifacts
          path: ./docs.tar.gz
      - name: Extract this build's changelog
        run: |
          START_LINE=$(grep -n -m 1 -E '^##' CHANGELOG.md | grep -Eo '^[0-9]+')
          ((START_LINE++))
          END_LINE=$(grep -n -m 2 -E '^##' CHANGELOG.md | tail -n 1 | grep -Eo '^[0-9]+')
          LENGTH=$(( END_LINE - START_LINE ))
          tail -n +$START_LINE CHANGELOG.md | head -n $LENGTH > CHANGELOG.latest.md
      - name: Upload changelog
        uses: actions/upload-artifact@v2
        with:
          name: changelog
          path: ./CHANGELOG.latest.md

  scan:
    name: Perform Code Scan
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: javascript
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2