name: API Test
# This workflow continously runs the API Tests for this projects, to validate that the undocumented API used does not change
# Should the provided token expire, the job will wait for a refresh of the token or timeout

on:
  schedule:
    - cron:  '35 * * * *'
  workflow_dispatch:

env:
  PKG_NAME: icloud-photos-sync
  NODE_VERSION: 18
  APPLE_ID_USER: ${{ secrets.TEST_APPLE_ID_USER }}
  APPLE_ID_PWD: ${{ secrets.TEST_APPLE_ID_PWD }}
  #TRUST_TOKEN: ${{ secrets.TEST_TRUST_TOKEN }}
  PORT: 8080
  LOG_LEVEL: debug
  LOG_TO_CLI: true

jobs:
  run-test:
    name: Run Test
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup node
      uses: actions/setup-node@v2
      with:
        node-version: ${{ env.NODE_VERSION }}
    - name: Build & Install
      run: |
        npm run clean && \
        npm install && \
        npm run build && \
        npm link
      working-directory: rootfs/opt/icloud-photos-sync/
    - name: Check MFA Token
      run: |
        icloud-photos-sync token
      env:
        FAIL_ON_MFA: true
    - name: Run API Test
      run: |
        npm run test-api
      working-directory: rootfs/opt/icloud-photos-sync/
  
  acquire-token:
    name: Acquire Token
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup node
      uses: actions/setup-node@v2
      with:
        node-version: ${{ env.NODE_VERSION }}
    - name: Build 
      run: |
        npm run clean && \
        npm install && \
        npm run build
      working-directory: rootfs/opt/icloud-photos-sync/
    - name: Install
      run: |
        npm link && \
        chmod +x ~/work/icloud-photos-sync/icloud-photos-sync/rootfs/root/enter_mfa.sh && \
        ln -s ~/work/icloud-photos-sync/icloud-photos-sync/rootfs/root/enter_mfa.sh /usr/local/bin/enter_mfa && \
        chmod +x ~/work/icloud-photos-sync/icloud-photos-sync/rootfs/root/resend_mfa.sh && \
        ln -s ~/work/icloud-photos-sync/icloud-photos-sync/rootfs/root/resend_mfa.sh /usr/local/bin/resend_mfa
      working-directory: rootfs/opt/icloud-photos-sync/
    - name: Access runner to acquire token
      uses: lhotari/action-upterm@v1
      with:
        limit-access-to-users: steilerDev
        upterm-server: ssh://uptermd.upterm.dev:22