name: Production Release
# A manually triggered workflow to create a new release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version string for release'
        default: 'v1.0.0'
        required: true

jobs:
  version-bump:
    name: Repository version bump
    runs-on: ubuntu-latest
    environment: production
    permissions: 
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Version bump
        run: |
          NUMERIC_VERSION=${VERSION:1}
          sed -i '/^## Nightly Changes/c\<!-- ## Nightly Changes-->\n\n## '${VERSION} CHANGELOG.md
          sed -ri 's/"version": "[0-9]+\.[0-9]+\.[0-9]+"/"version": "'${NUMERIC_VERSION}'"/' app/package.json
          sed -ri 's/VERSION = "[0-9]+\.[0-9]+\.[0-9]+"/VERSION = "'${NUMERIC_VERSION}'"/' app/src/lib/package.ts
        env:
          VERSION: ${{ github.event.inputs.version }}
      - name: Commit & Tag
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          branch: main
          commit_message: Version bump to ${{ inputs.version }} - [skip ci]
          tagging_message: ${{ inputs.version }}

  build-workflow:
    name: Build
    needs: version-bump
    uses: ./.github/workflows/build.yml
    secrets: inherit
    permissions: {}

  publish-dockerhub:
    name: Publish Docker Image
    needs: build-workflow
    runs-on: ubuntu-latest
    environment: production
    permissions: {}
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: docker-artifacts
      - name: Login to DockerHub
        run: docker login -u ${{secrets.DOCKER_USERNAME}} -p ${{secrets.DOCKER_PWD}}
      - name: Load & Tag Docker Image
        run: |
          docker load --input ./docker-image.tar.gz
          docker image tag ${{github.event.repository.name}} ${{secrets.DOCKER_USERNAME}}/${{github.event.repository.name}}:nightly
          docker image tag ${{github.event.repository.name}} ${{secrets.DOCKER_USERNAME}}/${{github.event.repository.name}}:latest
          docker image tag ${{github.event.repository.name}} ${{secrets.DOCKER_USERNAME}}/${{github.event.repository.name}}:${{github.event.inputs.version}}
      - name: Push Docker Image
        run: docker image push --all-tags ${{secrets.DOCKER_USERNAME}}/${{github.event.repository.name}}
      - name: Update DockerHub readme
        uses: peter-evans/dockerhub-description@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PWD }}
          repository: ${{secrets.DOCKER_USERNAME}}/${{github.event.repository.name}}
          short-description: ${{ github.event.repository.description }}
          readme-filepath: ./README.md

  publish-npm:
    name: Publish npm
    needs: build-workflow
    runs-on: ubuntu-latest
    environment: production
    permissions: {}
    steps:
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ secrets.NODE_VERSION }}
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: app-artifacts
      - name: Prepare environment
        run: npm install
      - uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.NPM_TOKEN }}
  
  publish-gh-pages:
    name: Publish GH Pages
    needs: build-workflow
    runs-on: ubuntu-latest
    environment:
      name: production
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      contents: read
      pages: write
      id-token: write
    steps:
      - name: Setup Pages
        uses: actions/configure-pages@v2
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
  
  publish-wiki:
    name: Publish GitHub Wiki
    needs: build-workflow
    runs-on: ubuntu-latest
    environment: production
    permissions: {}
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: gh-wiki-artifacts
      - name: Upload Documentation to Wiki
        uses: SwiftDocOrg/github-wiki-publish-action@v1
        with:
          path: ./doc
        env:
          GH_PERSONAL_ACCESS_TOKEN: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}

  create-gh-release:
    name: Create GH Release
    needs: build-workflow
    runs-on: ubuntu-latest
    environment: production
    permissions:
      contents: write
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: ./artifacts
      - name: Prepare artifacts
        run: tar -C ./artifacts -czf ./icloud-photos-sync.${{github.event.inputs.version}}.tar.gz ./
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          bodyFile: ./artifacts/changelog/CHANGELOG.latest.md
          tag: ${{ inputs.version }}
          prerelease: ${{ inputs.pre-release }}
          artifacts: ./icloud-photos-sync.${{inputs.version}}.tar.gz
          #token: ${{ secrets.YOUR_GITHUB_TOKEN }}